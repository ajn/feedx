// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internal/testdata/testdata.proto

package testdata

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MockEnum int32

const (
	MockEnum_UNKNOWN MockEnum = 0
	MockEnum_FIRST   MockEnum = 3
)

var MockEnum_name = map[int32]string{
	0: "UNKNOWN",
	3: "FIRST",
}

var MockEnum_value = map[string]int32{
	"UNKNOWN": 0,
	"FIRST":   3,
}

func (x MockEnum) String() string {
	return proto.EnumName(MockEnum_name, int32(x))
}

func (MockEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_076a9f61cb4a1904, []int{0}
}

type MockMessage struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Enum                 MockEnum `protobuf:"varint,2,opt,name=enum,proto3,enum=feedx.internal.testdata.MockEnum" json:"enum,omitempty"`
	Height               uint32   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MockMessage) Reset()         { *m = MockMessage{} }
func (m *MockMessage) String() string { return proto.CompactTextString(m) }
func (*MockMessage) ProtoMessage()    {}
func (*MockMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_076a9f61cb4a1904, []int{0}
}
func (m *MockMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MockMessage.Unmarshal(m, b)
}
func (m *MockMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MockMessage.Marshal(b, m, deterministic)
}
func (m *MockMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MockMessage.Merge(m, src)
}
func (m *MockMessage) XXX_Size() int {
	return xxx_messageInfo_MockMessage.Size(m)
}
func (m *MockMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MockMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MockMessage proto.InternalMessageInfo

func (m *MockMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MockMessage) GetEnum() MockEnum {
	if m != nil {
		return m.Enum
	}
	return MockEnum_UNKNOWN
}

func (m *MockMessage) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterEnum("feedx.internal.testdata.MockEnum", MockEnum_name, MockEnum_value)
	proto.RegisterType((*MockMessage)(nil), "feedx.internal.testdata.MockMessage")
}

func init() { proto.RegisterFile("internal/testdata/testdata.proto", fileDescriptor_076a9f61cb4a1904) }

var fileDescriptor_076a9f61cb4a1904 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xc8, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0xd1, 0x2f, 0x49, 0x2d, 0x2e, 0x49, 0x49, 0x2c, 0x49, 0x84, 0x33, 0xf4,
	0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0xc4, 0xd3, 0x52, 0x53, 0x53, 0x2a, 0xf4, 0x60, 0xea, 0xf4,
	0x60, 0xd2, 0x4a, 0x05, 0x5c, 0xdc, 0xbe, 0xf9, 0xc9, 0xd9, 0xbe, 0xa9, 0xc5, 0xc5, 0x89, 0xe9,
	0xa9, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x60, 0xb6, 0x90, 0x29, 0x17, 0x4b, 0x6a, 0x5e, 0x69, 0xae, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x9f,
	0x91, 0xa2, 0x1e, 0x0e, 0xa3, 0xf4, 0x40, 0xe6, 0xb8, 0xe6, 0x95, 0xe6, 0x06, 0x81, 0x95, 0x0b,
	0x89, 0x71, 0xb1, 0x65, 0xa4, 0x66, 0xa6, 0x67, 0x94, 0x48, 0x30, 0x2b, 0x30, 0x6a, 0xf0, 0x06,
	0x41, 0x79, 0x5a, 0x4a, 0x5c, 0x1c, 0x30, 0x95, 0x42, 0xdc, 0x5c, 0xec, 0xa1, 0x7e, 0xde, 0x7e,
	0xfe, 0xe1, 0x7e, 0x02, 0x0c, 0x42, 0x9c, 0x5c, 0xac, 0x6e, 0x9e, 0x41, 0xc1, 0x21, 0x02, 0xcc,
	0x4e, 0x2a, 0x51, 0x4a, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0x60,
	0x0b, 0xf5, 0x31, 0xfc, 0x98, 0xc4, 0x06, 0xf6, 0x9b, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x42,
	0xf6, 0x49, 0xb3, 0xff, 0x00, 0x00, 0x00,
}
